<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yu.modelMapper.PropertyMapper">
  <sql id="propertyColumns">
    ${alias}.version,
    ${alias}.creation_date as creationDate,
    ${alias}.last_updated as lastUpdated,
    ${alias}.name,
    ${alias}.is_active as isActive,
    ${alias}.owner_id as ownerId,
    ${alias}.ownership_date as ownershipDate,
    ${alias}.geo_addr_latitude as geoAddrLatitude,
    ${alias}.geo_addr_longitude as geoAddrLongitude,
    ${alias}.addr_floor_line as addrFloorLine,
    ${alias}.addr_block as addrBlock,
    ${alias}.addr_street_address as addrStreetAddress,
    ${alias}.addr_district as addrDistrict,
    ${alias}.addr_area as addrArea,
    ${alias}.addr_postal_code as addrPostalCode,
    ${alias}.addr_city as addrCity,
    ${alias}.addr_province as addrProvince,
    ${alias}.addr_state as addrState,
    ${alias}.addr_country_code as addrCountryCode</sql>
  <select id="findPropertyById"
          parameterType="String"
          resultType="com.yu.model.property.Property">
    SELECT id,
    <include refid="propertyColumns">
      <property name="alias" value="it" />
    </include>
    FROM ppy_property as it
    WHERE it.id = #{id}
  </select>
  <select id="listAllProperty" resultType="com.yu.model.property.Property">
    SELECT id,
    <include refid="propertyColumns">
      <property name="alias" value="it" />
    </include>
    FROM ppy_property as it
    WHERE 1>0
      <if test="isActive == 1">
        AND it.is_active = 1
      </if>
      <if test="isActive == 0">
        AND it.is_active = 0
      </if>
      <if test="idMin">
        AND it.id >= #{idMin}
      </if>
      <if test="idMax">
        AND it.id &lt; #{idMax}
      </if>
      <if test="creationDateMin">
        AND it.creation_date >= #{creationDateMin}
      </if>
      <if test="creationDateMax">
        AND it.creation_date &lt; #{creationDateMax}
      </if>
      <if test="lastUpdatedMin">
        AND it.last_updated >= #{lastUpdatedMin}
      </if>
      <if test="lastUpdatedMax">
        AND it.last_updated &lt; #{lastUpdatedMax}
      </if>
    ORDER BY it.id desc
    LIMIT ${pageOffset},${pageSize}
  </select>
  <select id="countAllProperty" resultType="long">
    SELECT count(*)
    FROM ppy_property as it
    WHERE 1>0
      <if test="isActive == 1">
        AND it.is_active = 1
      </if>
      <if test="isActive == 0">
        AND it.is_active = 0
      </if>
      <if test="idMin">
        AND it.id >= #{idMin}
      </if>
      <if test="idMax">
        AND it.id &lt; #{idMax}
      </if>
      <if test="creationDateMin">
        AND it.creation_date >= #{creationDateMin}
      </if>
      <if test="creationDateMax">
        AND it.creation_date &lt; #{creationDateMax}
      </if>
      <if test="lastUpdatedMin">
        AND it.last_updated >= #{lastUpdatedMin}
      </if>
      <if test="lastUpdatedMax">
        AND it.last_updated &lt; #{lastUpdatedMax}
      </if>
  </select>
  <select id="findAllPropertyWithName" resultType="com.yu.model.property.Property">
    SELECT id,
    <include refid="propertyColumns">
      <property name="alias" value="it" />
    </include>
    FROM ppy_property as it
    WHERE 1>0
      AND it.name = #{name}
      <if test="isActive">
        AND it.is_active = 1
      </if>
      <if test="!isActive">
        AND it.is_active = 0
      </if>
      <if test="idMin">
        AND it.id >= #{idMin}
      </if>
      <if test="idMax">
        AND it.id &lt; #{idMax}
      </if>
      <if test="creationDateMin">
        AND it.creation_date >= #{creationDateMin}
      </if>
      <if test="creationDateMax">
        AND it.creation_date &lt; #{creationDateMax}
      </if>
      <if test="lastUpdatedMin">
        AND it.last_updated >= #{lastUpdatedMin}
      </if>
      <if test="lastUpdatedMax">
        AND it.last_updated &lt; #{lastUpdatedMax}
      </if>
    ORDER BY it.id desc
    LIMIT ${pageOffset},${pageSize}
  </select>
  <insert id="generatePropertyId"
          useGeneratedKeys="true"
          keyProperty="id"
          parameterType="com.yu.model.IntegerId">
    insert into ppy_property_id values ()
  </insert>
  <insert id="insertPropertyWithModel"
          parameterType="com.yu.model.property.Property">
    insert ppy_property (id, version,
      name,
      is_active,
      owner_id,
      ownership_date,
      geo_addr_latitude,
      geo_addr_longitude,
      addr_floor_line,
      addr_block,
      addr_street_address,
      addr_district,
      addr_area,
      addr_postal_code,
      addr_city,
      addr_province,
      addr_state,
      addr_country_code)
    values (#{it.id}, 1,
      #{it.name},
      <if test="it.isActive">1</if>
      <if test="!it.isActive">0</if>,
      #{it.ownerId},
      #{it.ownershipDate},
      #{it.geoAddrLatitude},
      #{it.geoAddrLongitude},
      #{it.addrFloorLine},
      #{it.addrBlock},
      #{it.addrStreetAddress},
      #{it.addrDistrict},
      #{it.addrArea},
      #{it.addrPostalCode},
      #{it.addrCity},
      #{it.addrProvince},
      #{it.addrState},
      #{it.addrCountryCode})
  </insert>
  <update id="updatePropertyWithModel"
          parameterType="com.yu.model.property.Property">
    update ppy_property
    set version = version+1,
      last_updated = CURRENT_TIMESTAMP,
      name = #{it.name},
      is_active =
        <if test="it.isActive">1</if>
        <if test="!it.isActive">0</if>,
      owner_id = #{it.ownerId},
      ownership_date = #{it.ownershipDate},
      geo_addr_latitude = #{it.geoAddrLatitude},
      geo_addr_longitude = #{it.geoAddrLongitude},
      addr_floor_line = #{it.addrFloorLine},
      addr_block = #{it.addrBlock},
      addr_street_address = #{it.addrStreetAddress},
      addr_district = #{it.addrDistrict},
      addr_area = #{it.addrArea},
      addr_postal_code = #{it.addrPostalCode},
      addr_city = #{it.addrCity},
      addr_province = #{it.addrProvince},
      addr_state = #{it.addrState},
      addr_country_code = #{it.addrCountryCode}
    where id = #{it.id} and version = #{it.version}
  </update>
</mapper>